[{"content":"关于Hugo Hugo只需用户编辑markdown文档，Hugo自动完成将markdown文档转换为网页。用户编辑的markdown文件存放于content文件夹，生成的网页源文件存放于public文件夹。\n将Hugo生成的网页部署到Github只需将public文件夹推送到GitHub仓库。\n关于Github Pages  GitHub Pages is a static site hosting service that takes HTML, CSS, and JavaScript files straight from a repository on GitHub, optionally runs the files through a build process, and publishes a website.\n Github Pages 分为个人/组织页面和项目页面，两者的不同在于url，个人博客更适合于前者。\n User/Organization Pages (https://\u0026lt;USERNAME|ORGANIZATION\u0026gt;.github.io/) Project Pages (https://\u0026lt;USERNAME|ORGANIZATION\u0026gt;.github.io/\u0026lt;PROJECT\u0026gt;/)  创建User Page 在Github新建仓库，个人的创建和项目页面有两点不同：\n  用于个人的仓库必须被用户（而不是组织）所有，并命名为\u0026lt;username\u0026gt;.github.io\n  个人页面的源文件放置于仓库的默认分支中\n  免费创建的页面仓库必须设置为Public\n选择 Initialize this repository with a README ，完成仓库创建\n将源文件推送到仓库 在创建的仓库中复制远程仓库地址\n在Hugo生成的文件夹下，在终端中输入\n1 2 3 4 5 6 7  hugo #生成网页源文件 cd public #生成的源文件存放在public文件夹中，只需将该文件夹推送到所创建的仓库中 git init #git初始化 git remote add origin git@github.com:\u0026lt;username\u0026gt;/\u0026lt;username\u0026gt;.github.io.git #关联远程仓库 git add . git commit -m \u0026#34;first commit\u0026#34; #在本地提交更改 git push -u origin master #将更改推送到远程仓库   此时GitHub仓库中有了main和master两个分支，main分支是创建仓库是自动生成的默认分支，mater分支由本地推送\n由于GitHub Pages的个人页面从默认分支提取网页源文件，需在仓库的settings-pages-source中将分支改为master\n之后即可通过\u0026lt;username\u0026gt;.github.io访问网页\n","date":"2022-02-12T19:34:01+08:00","permalink":"https://xland.cyou/p/deploy-hugo-to-github-pages/","title":"Hugo部署到Github"}]